name: Release

on:
  push:
    tags:
      - "*"
jobs:
  mac:
    strategy:
      fail-fast: false
      matrix:
        otp:
          - 24.2.1-1
          - 23.3.4.9-3
        os:
          - macos-11
          - macos-10.15
    runs-on: ${{ matrix.os }}
    steps:
      - name: prepare
        run: |
          brew update
          brew install curl zip unzip gnu-sed kerl
          echo "/usr/local/bin" >> $GITHUB_PATH
          git config --global credential.helper store
      - uses: actions/cache@v2
        id: cache
        with:
          path: ~/.kerl/${{ matrix.otp }}
          key: otp-install-${{ matrix.otp }}-${{ matrix.os }}

      - name: build erlang
        if: steps.cache.outputs.cache-hit != 'true'
        timeout-minutes: 60
        run: |
          kerl update releases
          kerl build git https://github.com/emqx/otp.git OTP-${{ matrix.otp }} ${{ matrix.otp }}
          kerl install ${{ matrix.otp }} $HOME/.kerl/${{ matrix.otp }}

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: install rebar3
        run: |
          wget https://s3.amazonaws.com/rebar3/rebar3 && chmod +x rebar3
          cp ./rebar3 /usr/local/bin/rebar3

      - name: test build
        if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
        run: |
          . $HOME/.kerl/${{ matrix.otp }}/activate
          make

      - name: build release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          . $HOME/.kerl/${{ matrix.otp }}/activate
          BUILD_RELEASE=1 make

      - uses: actions/upload-artifact@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: packages
          path: |
            _packages/*.gz
            _packages/*.gz.sha256

  linux:
    strategy:
      fail-fast: false
      matrix:
        otp:
          - 23.3.4.9-4
          - 24.2.1-1
        elixir:
          - 1.13.4
        arch:
          - amd64
          - arm64
        os:
          - ubuntu20.04
          - ubuntu18.04
          - ubuntu16.04
          - debian11
          - debian10
          - debian9
          - el7
          - el8
          - alpine3.15.1
        include:
          - os: raspbian10
            arch: arm64

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: install rebar3
        run: |
          wget https://s3.amazonaws.com/rebar3/rebar3 && chmod +x rebar3
          cp ./rebar3 /usr/local/bin/rebar3

      - uses: docker/setup-buildx-action@v1

      - name: prepare buildx
        run: docker run --rm --privileged tonistiigi/binfmt:latest --install ${{ matrix.arch }}

      - name: test build
        if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
        run: |
          IMAGE=ghcr.io/emqx/emqx-builder/5.0-16:${{ matrix.elixir }}-${{ matrix.otp }}-${{ matrix.os }}
          docker run -i --user 1001 --rm -v $(pwd):/wd --workdir /wd --platform=linux/${{ matrix.arch }} $IMAGE bash -euc 'make'

      - name: build release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          IMAGE=ghcr.io/emqx/emqx-builder/5.0-16:${{ matrix.elixir }}-${{ matrix.otp }}-${{ matrix.os }}
          docker run -i --user 1001 --rm -v $(pwd):/wd --workdir /wd --platform=linux/${{ matrix.arch }} -e BUILD_RELEASE=1 $IMAGE bash -euc 'make'

      - uses: actions/upload-artifact@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: packages
          path: |
            _packages/*.gz
            _packages/*.gz.sha256

  release:
    runs-on: ubuntu-latest
    needs:
      - mac
      - linux
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: packages
          path: packages
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Erlang Rocksdb NIF ${{ github.ref }} Released
          body: Erlang Rocksdb NIF ${{ github.ref }} Released
          draft: false
          prerelease: false
      - uses: Rory-Z/upload-release-asset@v1
        with:
          repo: erlang-rocksdb
          path: "packages/*"
          token: ${{ github.token }}
